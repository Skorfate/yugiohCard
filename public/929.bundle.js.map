{"version":3,"sources":["webpack://yugioh/./src/constante/FiltroCarta.constante.js","webpack://yugioh/./src/components/Buscador/Buscador.component.jsx","webpack://yugioh/./src/components/Detalle/detalle.component.jsx","webpack://yugioh/./src/components/Card/Card.component.jsx","webpack://yugioh/./src/components/notFound/notFound.component.jsx","webpack://yugioh/./src/api/Client.js","webpack://yugioh/./src/api/Yugioh.api.js","webpack://yugioh/./src/page/Home/Home.page.jsx","webpack://yugioh/./src/components/FetchData/UseFetch.component.jsx"],"names":["level","id","name","attributes","useStyles","makeStyles","theme","root","paper","padding","spacing","textAlign","color","palette","text","secondary","noLabel","marginTop","w100","width","setParametro","classes","useState","nombre","setNombre","atributo","setAtributo","nivel","setNivel","className","Paper","Grid","container","md","xs","alignItems","FormControl","TextField","label","onChange","event","target","value","margin","variant","item","clsx","formControl","InputLabel","Select","MenuItem","map","Button","onClick","parametro","params","attribute","modal","display","aarticlegnItems","justifyContent","position","backgroundColor","background","border","boxShadow","shadows","cleanText","texto","open","handleClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","onClose","DialogTitle","archetype","DialogContent","Typography","component","desc","Divider","race","atk","def","DialogActions","autoFocus","flexWrap","overflow","imageList","minWidth","minHeight","maxHeight","icon","cards","setItem","setOpen","lg","ImageList","rowHeight","style","marginBottom","ImageListItem","key","card_images","length","src","image_url_small","alt","ImageListItemBar","title","subtitle","actionIcon","IconButton","Info","sm","Alert","severity","Client","axios","baseURL","headers","interceptors","request","use","response","data","getCard","then","res","catch","err","console","error","param","setCards","loading","setLoading","buscarCarta","log","useEffect","useFetch","justify","direction","Box","m","CircularProgress"],"mappings":"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","file":"929.bundle.js","sourcesContent":["export const level = [\r\n    {\r\n        id : 1,\r\n        name : 1,\r\n    },\r\n    {\r\n        id : 2,\r\n        name : 2,\r\n    },\r\n    {\r\n        id : 3,\r\n        name : 3,\r\n    },\r\n    {\r\n        id : 4,\r\n        name : 4,\r\n    },\r\n    {\r\n        id : 5,\r\n        name : 5,\r\n    },\r\n    {\r\n        id : 6,\r\n        name : 6,\r\n    },\r\n    {\r\n        id : 7,\r\n        name : 7,\r\n    },\r\n    {\r\n        id : 8,\r\n        name : 8,\r\n    },\r\n    {\r\n        id : 9,\r\n        name : 9,\r\n    },\r\n    {\r\n        id : 10,\r\n        name : 10,\r\n    },\r\n    {\r\n        id : 11,\r\n        name : 11,\r\n    },\r\n    {\r\n        id : 12,\r\n        name : 12,\r\n    },\r\n]\r\n\r\nexport const attributes = [\r\n    {\r\n        id : 'dark',\r\n        name : 'Dark',\r\n    },\r\n    {\r\n        id : 'water',\r\n        name : 'Water',\r\n    },\r\n    {\r\n        id : 'wind',\r\n        name : 'Wind',\r\n    },\r\n    {\r\n        id : 'fire',\r\n        name : 'Fire',\r\n    },\r\n    {\r\n        id : 'light',\r\n        name : 'Light',\r\n    },\r\n    {\r\n        id : 'earth',\r\n        name : 'Earth',\r\n    },\r\n    {\r\n        id : 'divine',\r\n        name : 'Divine',\r\n    },    \r\n];\r\n\r\nconst cartasInsignias = [\r\n    {\r\n        id : 'dark magician',\r\n        name : 'Dark Magician',\r\n    },\r\n    {\r\n        id : 'blue eyes white dragon',\r\n        name : 'blue eyes white dragon',\r\n    },\r\n    {\r\n        id : 'black luster soldier',\r\n        name : 'black luster soldier',\r\n    }   \r\n]","import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { attributes,level } from '../../constante/FiltroCarta.constante';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    w100 : {\r\n        width : '100% !important'\r\n    }\r\n  }));\r\n\r\nconst Buscador = ({setParametro}) =>  {\r\n    const classes = useStyles();\r\n    const [nombre, setNombre] = useState('');\r\n    const [atributo, setAtributo] = useState();\r\n    const [nivel, setNivel] = useState();\r\n\r\n    const onChangeCard = (event) => {\r\n        setNombre(event.target.value);\r\n    }\r\n\r\n    const onchageAtributo = (event) => {\r\n       setAtributo(event.target.value);\r\n    }\r\n    const onchageNivel = (event) => {\r\n        setNivel(event.target.value);\r\n    }\r\n\r\n    const buscar = () => {\r\n        const parametro = { params : {\r\n           name : nombre,\r\n           attribute : atributo,\r\n           level : nivel,\r\n        }}\r\n\r\n        if(!parametro.params.name)\r\n            delete parametro.params.name;\r\n        if(!parametro.params.attribute)\r\n            delete parametro.params.attribute;\r\n        if(!parametro.params.level)\r\n            delete parametro.params.level;                \r\n\r\n        setParametro(parametro);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className=\"paper\">\r\n            <Grid container spacing={3} md={12} xs={12} alignItems=\"stretch\">\r\n                \r\n                    <Grid container md={6} xs={6} className={classes.paper}>\r\n                        \r\n                        <FormControl>\r\n                            <TextField id=\"buscador\"\r\n                                            label=\"Carta\"\r\n                                            onChange={onChangeCard}\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        \r\n                        </FormControl>\r\n                       \r\n                    </Grid>\r\n                    <Grid item xs={3} md={3} className={classes.paper} >\r\n                        \r\n                            <FormControl className={clsx(classes.formControl, classes.noLabel, classes.w100)}>\r\n                                <InputLabel id=\"atribuLabel\">Atributo</InputLabel>\r\n                                <Select id=\"selectAtributo\" onChange={onchageAtributo} className={classes.w100}>\r\n                                    <MenuItem value={null}>\r\n                                        <em>Seleccionar</em>\r\n                                    </MenuItem>\r\n                                    {attributes.map(item => (\r\n                                        <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={3} md={3} className={classes.paper}>\r\n                       \r\n                            <FormControl className={clsx(classes.formControl, classes.noLabel, classes.w100)}>\r\n                                <InputLabel id=\"nivelLabel\">Nivel</InputLabel>\r\n                                <Select id=\"selectNivel\" onChange={onchageNivel} className={classes.w100}>\r\n                                    <MenuItem value={null}>\r\n                                        <em>Seleccionar</em>\r\n                                    </MenuItem>\r\n                                    {level.map(item => (\r\n                                        <MenuItem value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        \r\n                    </Grid>                   \r\n            </Grid>\r\n            <Grid container spacing={3} md={12} xs={12}>\r\n                <Grid item xs={12} md={12} className={clsx(classes.paper)} >\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.w100} onClick={buscar}>\r\n                        Buscar\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buscador\r\n","import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      aarticlegnItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px soarticled #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nconst cleanText = texto => !texto || texto === \"N/A\" ? \"Sin informacion\" : texto;\r\n\r\nconst Detalle = ({ open, handleClose, item }) => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n    <Dialog open={open} \r\n        fullScreen={fullScreen}\r\n        onClose={handleClose}        \r\n        className={classes.modal}        \r\n        >\r\n      <>\r\n      \r\n      <DialogTitle id=\"responsive-dialog-title\">{item.archetype}</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          Descripcion: {cleanText(item.desc)}\r\n        </Typography>\r\n        <Divider variant=\"inset\" component=\"article\" />\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          Nivel: {cleanText(item.level)}\r\n        </Typography>\r\n        <Divider variant=\"inset\" component=\"article\" />\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          Tipo: {cleanText(item.race)}\r\n        </Typography>\r\n        <Divider variant=\"inset\" component=\"article\" />\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          Atributo: {cleanText(item.attribute)}\r\n        </Typography>\r\n        <Divider variant=\"inset\" component=\"article\" />\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          Atk: {cleanText(item.atk)} / Def : {cleanText(item.def)}\r\n        </Typography>\r\n        <Divider variant=\"inset\" component=\"article\" />        \r\n        <Divider variant=\"inset\" component=\"article\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cerrar\r\n          </Button>          \r\n        </DialogActions>\r\n      </>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Detalle;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Box from '@material-ui/core/Box';\r\nimport Detalle from '../Detalle/detalle.component';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    imageList: {\r\n      minWidth: 200,\r\n      minHeight: 450,\r\n      maxHeight: 1000,\r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n  }));\r\n\r\nconst Card = ({cards = []}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [item, setItem] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => setOpen(!open);\r\n    \r\n    const onClick = (item) => {\r\n        setItem(item);\r\n        handleClose();\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={3} md={12} xs={12} lg={12}>\r\n                        \r\n                <ImageList rowHeight={246} className={classes.imageList}>\r\n                    {cards.map((item) => (                        \r\n                            <Grid item md={2} xs={2} className={classes.paper} style={{width: '100%', minWidth: '200px', marginBottom: 60}}> \r\n                                \r\n                                    <ImageListItem key={item.id}>\r\n                                        {item?.card_images && item.card_images.length > 0 &&\r\n                                            <>                            \r\n                                                <img src={item.card_images[0].image_url_small} alt={item.archetype}  style={{minWidth: '200px'}}/>\r\n                                            </>\r\n                                        }\r\n                                        <ImageListItemBar\r\n                                        title={item.archetype}\r\n                                        subtitle={<span>{item.desc}</span>}\r\n                                        actionIcon={\r\n                                            <IconButton aria-label={`Atk: ${item.atk}/ Def: ${item.def}`} className={classes.icon} onClick={() => onClick(item)}>\r\n                                                <InfoIcon/>\r\n                                            </IconButton>\r\n                                        }\r\n                                        />\r\n                                    </ImageListItem>\r\n                                \r\n                            </Grid>\r\n                        \r\n                    ))}\r\n                </ImageList>\r\n\r\n                <Detalle handleClose={handleClose} open={open} item={item} />\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <Grid item xs={12} sm={12} style={{marginTop: '15px'}}>\r\n        <Alert severity=\"warning\">No existe resultado</Alert>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import axios from 'axios'\r\n\r\n\r\nconst Client = axios.create({\r\n\r\n\tbaseURL: `https://db.ygoprodeck.com/api`,\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json;charset=UTF-8',\r\n\t}\r\n\r\n})\r\n\r\nClient.interceptors.request.use(request => request);\r\n\r\nClient.interceptors.response.use(response => response.data);\r\n\r\nexport default Client;","import Client from './Client';\r\n\r\nexport const getCard = async (request) => await Client.get(`/v7/cardinfo.php`,request).then(res => res.data).catch(err => { console.error(err); return [];});","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React, {useState } from 'react'\r\nimport Buscador from './../../components/Buscador/Buscador.component';\r\nimport Card from './../../components/Card/Card.component';\r\nimport Box from '@material-ui/core/Box';\r\nimport NotFound from './../../components/notFound/notFound.component';\r\nimport useFetch from './../../components/FetchData/UseFetch.component';\r\n\r\nconst Home = () => {\r\n    const [parametro, setParametro] = useState({})\r\n    const { loading, cards} = useFetch(parametro);\r\n\r\n\r\n    return (\r\n            <Grid container  justify=\"center\" alignItems=\"center\"  direction=\"column\">\r\n                    <Buscador setParametro={setParametro}/>\r\n                    <Box m={4}>\r\n                        {loading &&\r\n                        <CircularProgress/>\r\n                        }\r\n                        {!loading && \r\n                            <Grid item spacing={ 3 }  xs={12} sm={12} md={12} justify=\"center\" style={{width: '100%'}}>\r\n                                {cards.length === 0 && \r\n                                    <NotFound/>\r\n                                }\r\n                                <Card cards={cards} />\r\n                            </Grid>\r\n                        }\r\n                    </Box>\r\n                    \r\n            </Grid>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getCard } from './../../api/Yugioh.api';\r\n\r\nconst useFetch = (param) => {\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [loading, setLoading ] = useState(false);\r\n\r\n    const buscarCarta = async (parametro) => {\r\n        if(!parametro?.params?.level && !parametro?.params?.attribute && !parametro?.params?.name)\r\n            return;        \r\n        setLoading(true);\r\n        console.log(parametro);\r\n        const data = await getCard(parametro);\r\n        console.log(data);\r\n        setCards(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        buscarCarta(param);\r\n      }, [param]);\r\n\r\n      return { cards, loading };\r\n}\r\n\r\nexport default useFetch;\r\n\r\n"],"sourceRoot":""}